@using ScoreService.Entities
@model ScoreService.ViewModel.ScoreModel

@{
    ViewData["Title"] = "Home Page";
}
<div class="team-estimate-view__container">
    <div class="team-estimate-view">
        <div id="team-estimate-form">
            <div class="team-list-view__title">@(Model.TeamName + "(" + Model.Address + ")")</div>
            <input id="teamName" tName="@Model.TeamName" hidden />
            <input id="teamId" tId="@Model.TeamId" hidden />
            <div class="team-estimate-criteria__list">
                @for (var i = 0; i < Model.Categories.Count; i++)
                {

                    switch (Model.Categories[i].CategoryKind)
                    {
                        case ScoreCategoryKind.Number:
                            {
                                <div class="team-estimate-criteria">
                                    <div class="team-estimate-criteria__title">@Model.Categories[i].Name</div>
                                    <div class="team-estimate-criteria__marks" name="@Model.Categories[i].Name" catId="@Model.Categories[i].Id">
                                        <div class="team-estimate-criteria__mark">
                                            <input type="radio" cId="@Model.Categories[i].Id" name="@(Model.Categories[i].Id+"-radio")" value="1" onclick="checkCanSend()">
                                            <span>1</span>
                                        </div>
                                        <div class="team-estimate-criteria__mark">
                                            <input type="radio" cId="@Model.Categories[i].Id" name="@(Model.Categories[i].Id+"-radio")" value="2"  onclick="checkCanSend()">
                                            <span>2</span>
                                        </div>
                                        <div class="team-estimate-criteria__mark">
                                            <input type="radio" cId="@Model.Categories[i].Id" name="@(Model.Categories[i].Id+"-radio")" value="3"  onclick="checkCanSend()">
                                            <span>3</span>
                                        </div>
                                        <div class="team-estimate-criteria__mark">
                                            <input type="radio" cId="@Model.Categories[i].Id" name="@(Model.Categories[i].Id+"-radio")" value="4" onclick="checkCanSend()">
                                            <span>4</span>
                                        </div>
                                        <div class="team-estimate-criteria__mark">
                                            <input type="radio" cId="@Model.Categories[i].Id" name="@(Model.Categories[i].Id+"-radio")" value="5"  onclick="checkCanSend()">
                                            <span>5</span>
                                        </div>
                                    </div>
                                </div>
                            }
                            break;
                        case ScoreCategoryKind.String:
                            <div class="team-estimate-criteria">
                                <div class="team-estimate-criteria__area">
                                    <div class="team-estimate-criteria__title">@Model.Categories[i].Name</div>
                                    <textarea class="team-estimate-criteria__area__text" name="@Model.Categories[i].Name" catId="@Model.Categories[i].Id"  oninput="checkCanSend()"></textarea>
                                </div>
                            </div>
                            break;
                        default:
                            throw new ArgumentOutOfRangeException();
                    }

                }
            </div>
            <button class="team-estimate__send-button disabled" value="" onclick="sendData()">Отправить оценку</button>
        </div>
    </div>
</div>
